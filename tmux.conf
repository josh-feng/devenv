######################################  TMUX CONFIG  #######################################
# export TMUX_TMPDIR=~/.sockets
# NB:
#   set     set-option
#   setw    set-window-option
#
# list-commands, list-windows, list-keys, ...
# bind -c ... command mode (otherwise normal mode)
# bind -n ... prefix not need
# bind -r ... may repeat
# bind -t ... to key-table (vi-edit, vi-choice, vi-copy)

# general behavior {{{
# conform to screen (C-a), since it's a replacement
set -g prefix C-a
unbind C-b
bind C-a send-prefix
bind-key R source-file ~/.tmux.conf \; display "Reloaded!"

# use vim keybindings in copy mode
set -g mode-keys vi
setw -g mode-keys vi

# explicitly disable mouse control
#setw -g mode-mouse off
#set -g mouse-select-pane off
#set -g mouse-resize-pane off
#set -g mouse-select-window off

# capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Scroll History
set -g history-limit 15000

# escape time from 500ms to 50ms for quicker response to scroll-buffer access
# shorten command delay: set -sg escape-time 1
set -s escape-time 50

# set -s display-time 1000

# set -g lock-command vlock
# }}}
############################################################################################
# appearance and status # {{{
# use UTF8
#set -g utf8
#set-window-option -g utf8 on

# set -g default-terminal "xterm-256color"
# set -g default-terminal "screen-256color"
# rxvt-unicode-256color
set -g default-terminal $TERM

# hide status bar
set -g status off
# toggle status bar
# set -g status
bind-key -n C-F3 set-option -g status # Ctrl+F3 Combo

# enable window titles# {{{
# window title string (use status bar variable) DFHIPSTWh
set -g set-titles on
set-window-option -g automatic-rename on
# set -g set-titles-string "#20T %H:%M %d-%g-%y"
# set -g set-titles-string "%d-%b-%y (#S:#I) #22T"
# set -g set-titles-string "%Y/%m/%d (#S:#I) #22T"
# set -g set-titles-string "(#S:#I) #22T"
set -g set-titles-string "(#S:#I:#W) #T"

# pane title (#T)?
# !printf '\033]2;%s\033\\' 'title goes here'

# window title (#W)
# !printf "\033kIDE ".a:filename."\033\\"
# }}}
# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - hilight the active pane
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour240 #base01

# colorize messages in the command line
# set-option -g message-bg black #base02
# set-option -g message-fg brightred #orange

# ----------------------
# Status Bar
# -----------------------
# set-option -g status on              # turn the status bar on
# set -g status-utf8 on                # set utf-8 for the status bar
# set -g status-interval 5             # set update frequencey (default 15 seconds)
# set -g status-justify centre         # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
# setw -g monitor-activity on
# set -g visual-activity on

# set color for status bar {{{
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr dim

# set window list colors - red for active and cyan for inactive
# set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-fg green #base0
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr dim
#
# set-window-option -g window-status-current-fg brightred #orange
# set-window-option -g window-status-current-bg colour236
# set-window-option -g window-status-current-attr bright
# }}}

# show host name and IP address on left side of status bar
# set -g status-left-length 70
# set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

# show session name, window & pane number, date and time on right side of
# status bar
# set -g status-right-length 60
# set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"
# }}}
############################################################################################
# pane settings # {{{
# set window and pane index to 1 (0 by default)
# set-option -g base-index 1
# setw -g pane-base-index 1
# Make the current window the first window
# bind T swap-window -t 1

# split v --> "
# split h --> %

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h
bind _ split-window -v
unbind '"'
unbind %

# map Vi movement keys as pane movement keys {{{
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# and use C-h and C-l to cycle thru panes
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5
# }}}

# bind-key m display-message "Test message"

# Allow xterm titles in terminal window, terminal scrolling with scrollbar
# Set overrides of C-Up, C-Down, C-Left, C-Rigt
# set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUPt=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"
# }}}
############################################################################################
# Buffer Copy & Paste # {{{
# provide access to the clipboard for pbpaste, pbcopy
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# update default binding of 'Enter' to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

##CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
#bind y run "tmux save-buffer - | xclip -i -selection clipboard"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
#bind P run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

bind C-c run "tmux save-buffer - | xclip -i -selection \"clipboard\""
bind C-v run "xclip -o -selection \"clipboard\" | tmux load-buffer - ; tmux paste-buffer"

#bind C-c run "tmux show-buffer | xsel -i -b"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
#bind C-v run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"
# }}}
############################################################################################
bind F2 run "echo -n `date +%Y-%m%d` | tmux load-buffer - ; tmux paste-buffer -d"
##################################### mini tutorial  #######################################
# prefix-[  copy mode can move around
# prefix-#  list buffer
# prefix-=  choose buffer
# prefix--  delete buffer
# prefix-]  paste buffer
